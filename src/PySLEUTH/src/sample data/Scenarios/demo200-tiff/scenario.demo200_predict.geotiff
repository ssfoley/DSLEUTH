# FILE: 'scenario file' for SLEUTH land cover transition model 
#       Comments start with # 
# 
#   I. Path Name Variables 
#  II. Running Status (Echo) 
# III. Output ASCII Files 
#  IV. Log File Preferences 
#  VI. Random Number Seed 
# VII. Monte Carlo Iteration 
#VIII. Coefficients 
#      A. Coefficients and Growth Types 
#      B. Modes and Coefficient Settings 
#  IX. Prediction Date Range 
#   X. Input Images 
#  XI. Output Images 
# XII. Colortable Settings 
#      A. Growth Type Images 
#      B. Deltatron Images
#XIII. Self Modification Parameters 

# I.PATH NAME VARIABLES 
#   INPUT_DIR: relative or absolute path where input image files and 
#              (if modeling land cover) 'landuse.classes' file are 
#              located. 
#   OUTPUT_DIR: relative or absolute path where all output files will 
#               be located. 

INPUT_DIR=../Input/tif_files/ 
OUTPUT_DIR=../Output/tif_files/

# II. RUNNING STATUS (ECHO) 
#  Status of model run, monte carlo iteration, and year will be 
#  printed to the screen during model execution. 
ECHO(YES/NO)=yes 

# III. Output Files 
# INDICATE TYPES OF ASCII DATA FILES TO BE WRITTEN TO OUTPUT_DIRECTORY. 
# 
#   COEFF_FILE: contains coefficient values for every run, monte carlo 
#               iteration and year. 
#   AVG_FILE: contains measured values of simulated data averaged over 
#             monte carlo iterations for every run and control year. 
#   STD_DEV_FILE: contains standard diviation of averaged values 
#                 in the AVG_FILE. 
#   MEMORY_MAP: logs memory map to file 'memory.log' 
#   LOGGING: will create a 'LOG_#' file where # signifies the processor 
#            number that created the file if running code in parallel. 
#            Otherwise, # will be 0. Contents of the LOG file may be 
#            described below. 
WRITE_COEFF_FILE(YES/NO)=yes
WRITE_AVG_FILE(YES/NO)=yes
WRITE_STD_DEV_FILE(YES/NO)=no 
WRITE_MEMORY_MAP(YES/NO)=YES
LOGGING(YES/NO)=YES

# IV. Log File Preferences 
# INDICATE CONTENT OF LOG_# FILE (IF LOGGING == ON). 
#   LANDCLASS_SUMMARY: (if landuse is being modeled) summary of input 
#                      from 'landuse.classes' file 
#   SLOPE_WEIGHTS(YES/NO): annual slope weight values as effected 
#                          by slope_coeff 
#   READS(YES/NO)= notes if a file is read in 
#   WRITES(YES/NO)= notes if a file is written 
#   COLORTABLES(YES/NO)= rgb lookup tables for all colortables generated 
#   PROCESSING_STATUS(0:off/1:low verbosity/2:high verbosity)= 
#   TRANSITION_MATRIX(YES/NO)= pixel count and annual probability of 
#                              land class transitions 
#   URBANIZATION_ATTEMPTS(YES/NO)= number of times an attempt to urbanize 
#                                  a pixel occurred 
#   INITIAL_COEFFICIENTS(YES/NO)= initial coefficient values for 
#                                 each monte carlo 
#   BASE_STATISTICS(YES/NO)= measurements of urban control year data 
#   DEBUG(YES/NO)= data dump of igrid object and grid pointers 
#   TIMINGS(0:off/1:low verbosity/2:high verbosity)= time spent within 
#     each module. If running in parallel, LOG_0 will contain timing for 
#     complete job. 
LOG_LANDCLASS_SUMMARY(YES/NO)=yes 
LOG_SLOPE_WEIGHTS(YES/NO)=no 
LOG_READS(YES/NO)=no
LOG_WRITES(YES/NO)=no
LOG_COLORTABLES(YES/NO)=no
LOG_PROCESSING_STATUS(0:off/1:low verbosity/2:high verbosity)=1 
LOG_TRANSITION_MATRIX(YES/NO)=yes
LOG_URBANIZATION_ATTEMPTS(YES/NO)=no 
LOG_INITIAL_COEFFICIENTS(YES/NO)=no 
LOG_BASE_STATISTICS(YES/NO)=yes 
LOG_DEBUG(YES/NO)= no
LOG_TIMINGS(0:off/1:low verbosity/2:high verbosity)=1

# VI. RANDOM NUMBER SEED 
# This number initializes the random number generator. This seed will be
# used to initialize each model run. 
RANDOM_SEED=1

# VII. MONTE CARLO ITERATIONS 
# Each model run may be completed in a monte carlo fashion. 
#  For CALIBRATION or TEST mode measurements of simulated data will be
#  taken for years of known data, and averaged over the number of monte  
#  carlo iterations. These averages are written to the AVG_FILE, and  
#  the associated standard diviation is written to the STD_DEV_FILE.  
#  The averaged values are compared to the known data, and a Pearson
#  correlation coefficient measure is calculated and written to the  
#  control_stats.log file. The input per run may be associated across 
#  files using the 'index' number in the files' first column. 
# 
MONTE_CARLO_ITERATIONS=10

# VIII. COEFFICIENTS 
# The coefficients effect how the growth rules are applied to the data.
# Setting requirements:
#    *_START values >= *_STOP values
#    *_STEP values > 0
#   if no coefficient increment is desired:
#    *_START == *_STOP
#    *_STEP == 1 
# For additional information about how these values affect simulated
# land cover change see our publications and PROJECT GIGALOPOLIS
#  site: (www.ncgia.ucsb.edu/project/gig/About/abGrowth.htm). 
#  A. COEFFICIENTS AND GROWTH TYPES 
#     DIFFUSION: affects SPONTANEOUS GROWTH and search distance along the 
#                road network as part of ROAD INFLUENCED GROWTH. 
#     BREED: NEW SPREADING CENTER probability and affects number of ROAD 
#            INFLUENCED GROWTH attempts. 
#     SPREAD: the probabilty of ORGANIC GROWTH from established urban
#             pixels occuring.              
#     SLOPE_RESISTANCE: affects the influence of slope to urbanization. As
#                       value increases, the ability to urbanize
#                       ever steepening slopes decreases. 
#     ROAD_GRAVITY: affects the outward distance from a selected pixel for
#                   which a road pixel will be searched for as part of
#                   ROAD INFLUENCED GROWTH. 
#
#  B. MODES AND COEFFICIENT SETTINGS 
#     TEST: TEST mode will perform a single run through the historical 
#           data using the CALIBRATION_*_START values to initialize 
#           growth, complete the MONTE_CARLO_ITERATIONS, and then conclude
#           execution. GIF images of the simulated urban growth will be 
#           written to the OUTPUT_DIRECTORY. 
#     CALIBRATE: CALIBRATE will perform monte carlo runs through the 
#                historical data using every combination of the
#                coefficient values indicated. The CALIBRATION_*_START  
#                coefficient values will initialize the first run. A  
#                coefficient will then be increased by its *_STEP value,  
#                and another run performed. This will be repeated for all
#                possible permutations of given ranges and increments. 
#     PREDICTION: PREDICTION will perform a single run, in monte carlo 
#                 fashion, using the PREDICTION_*_BEST_FIT values 
#                 for initialization.

CALIBRATION_DIFFUSION_START= 1
CALIBRATION_DIFFUSION_STEP=  1 
CALIBRATION_DIFFUSION_STOP=  1

CALIBRATION_BREED_START=     3 
CALIBRATION_BREED_STEP=      1 
CALIBRATION_BREED_STOP=      3 

CALIBRATION_SPREAD_START=    11 
CALIBRATION_SPREAD_STEP=     1 
CALIBRATION_SPREAD_STOP=     11 

CALIBRATION_SLOPE_START=     87 
CALIBRATION_SLOPE_STEP=      1
CALIBRATION_SLOPE_STOP=      87 

CALIBRATION_ROAD_START=      1
CALIBRATION_ROAD_STEP=       1 
CALIBRATION_ROAD_STOP=       1

PREDICTION_DIFFUSION_BEST_FIT=  2
PREDICTION_BREED_BEST_FIT=  5
PREDICTION_SPREAD_BEST_FIT=  20 
PREDICTION_SLOPE_BEST_FIT=  51 
PREDICTION_ROAD_BEST_FIT=  5 

# IX. PREDICTION DATE RANGE 
# The urban and road images used to initialize growth during 
# prediction are those with dates equal to, or greater than, 
# the PREDICTION_START_DATE. If the PREDICTION_START_DATE is greater 
# than any of the urban dates, the last urban file on the list will be 
# used. Similarly, if the PREDICTION_START_DATE is greater 
# than any of the road dates, the last road file on the list will be 
# used. The prediction run will terminate at PREDICTION_STOP_DATE. 
# 
PREDICTION_START_DATE=1990 
PREDICTION_STOP_DATE=2010

# X. INPUT IMAGES 
# The model expects grayscale, GIF image files with file name 
# format as described below. For more information see our 
# PROJECT GIGALOPOLIS web site: 
# (www.ncgia.ucsb.edu/project/gig/About/dtInput.htm). 
# 
# IF LAND COVER IS NOT BEING MODELED: Remove or comment out 
# the LANDUSE_DATA data input flags below. 
# 
#    <  >  = user selected fields 
#   [<  >] = optional fields 
# 
# Urban data GIFs 
#  format:  <location>.urban.<date>.[<user info>].gif 
# 
# 
URBAN_DATA= demo200.urban.1930.tif 
URBAN_DATA= demo200.urban.1950.tif 
URBAN_DATA= demo200.urban.1970.tif 
URBAN_DATA= demo200.urban.1990.tif 
# 
# Road data GIFs 
#  format:  <location>.roads.<date>.[<user info>].gif 
# 
ROAD_DATA= demo200.roads.1930.tif 
ROAD_DATA= demo200.roads.1950.tif 
ROAD_DATA= demo200.roads.1970.tif 
ROAD_DATA= demo200.roads.1990.tif 
# 
# Landuse data GIFs 
#  format:  <location>.landuse.<date>.[<user info>].gif 
# 
LANDUSE_DATA= demo200.landuse.1930.tif 
LANDUSE_DATA= demo200.landuse.1990.tif 
# 
# Excluded data GIF 
#  format:  <location>.excluded.[<user info>].gif 
# 
EXCLUDED_DATA= demo200.excluded.tif
# 
# Slope data GIF 
#  format:  <location>.slope.[<user info>].gif 
# 
SLOPE_DATA= demo200.slope.tif
# 
# Background data GIF 
#  format:   <location>.hillshade.[<user info>].gif 
# 
#BACKGROUND_DATA= demo200.hillshade.gif 
BACKGROUND_DATA= demo200.hillshade.tif

# XI. OUTPUT IMAGES 
#   WRITE_COLOR_KEY_IMAGES: Creates image maps of each colortable. 
#                           File name format: 'key_[type]_COLORMAP' 
#                           where [type] represents the colortable. 
#   ECHO_IMAGE_FILES: Creates GIF of each input file used in that job. 
#                     File names format: 'echo_of_[input_filename]' 
#                     where [input_filename] represents the input name. 
WRITE_COLOR_KEY_IMAGES(YES/NO)=no
ECHO_IMAGE_FILES(YES/NO)=yes

# XII. COLORTABLE SETTINGS 

#  A. GROWTH TYPE IMAGE OUTPUT CONTROL AND COLORTABLE 
# 
#  From here you can control the output of the Z grid 
#  (urban growth) just after it is returned from the spr_spread() 
#  function. In this way it is possible to see the different types 
#  of growth that have occured for a particular growth cycle. 
# 
#  VIEW_GROWTH_TYPES(YES/NO) provides an on/off 
#  toggle to control whether the images are generated. 
# 

VIEW_GROWTH_TYPES(YES/NO)=NO

#************************************************************ 
# 
#  B. DELTATRON AGING SECTION 
# 
#  From here you can control the output of the deltatron grid 
#  just before they are aged 
# 
#  VIEW_DELTATRON_AGING(YES/NO) provides an on/off 
#  toggle to control whether the images are generated. 
# 

VIEW_DELTATRON_AGING(YES/NO)=NO 

# XIII. SELF-MODIFICATION PARAMETERS 
#       SLEUTH is a self-modifying cellular automata. For more  
#       information see our PROJECT GIGALOPOLIS web site
#       (www.ncgia.ucsb.edu/project/gig/About/abGrowth.htm) 
#       and publications (and/or grep 'self modification' in code). 
ROAD_GRAV_SENSITIVITY=0.01 
SLOPE_SENSITIVITY=0.1 
CRITICAL_LOW=0.97 
CRITICAL_HIGH=1.3 
#CRITICAL_LOW=0.0 
#CRITICAL_HIGH=10000000000000.0 
CRITICAL_SLOPE=15.0 
BOOM=1.01 
BUST=0.09 
  
